{"version":3,"file":"component---src-pages-publications-js-ab93e251c0f770faeb06.js","mappings":"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","sources":["webpack://gatsby-starter-clean-resume/./src/components/badge.js","webpack://gatsby-starter-clean-resume/./src/components/citations.js","webpack://gatsby-starter-clean-resume/./src/components/publication.js","webpack://gatsby-starter-clean-resume/./src/pages/publications.js"],"sourcesContent":["import React from \"react\"\n\nconst Badge = props => {\n  return (\n  <a href={props.link} className=\"badge\">{props.children}</a>\n  )\n}\n\nexport default Badge\n","import React from \"react\"\nimport CitationData from \"../../content/citations.yaml\"\nimport PublicationData from \"../../content/publications.yaml\"\nimport PatentData from \"../../content/patents.yaml\"\n\nconst Citations = props => {\n  const patentText = PatentData.length === 1 ? \"patent\" : \"patents\";\n  const publicationText = PublicationData.length === 1 ? \"publication\" : \"publications\";\n  const citationText = CitationData.count === 1 ? \"citation\" : \"citations\";\n\n  return (\n    <div className=\"citations\">\n      {PatentData.length} {patentText}, {PublicationData.length} {publicationText}, {CitationData.count} {citationText}. H-index : {CitationData.hindex}\n    </div>\n  )\n}\n\nexport default Citations\n","import React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\nimport Badge from \"./badge\"\n\nconst Publication = props => {\n  const data = useStaticQuery(graphql`\n    query {\n      site {\n        siteMetadata {\n          publication_highlight\n        }\n      }\n    }\n  `)\n\n  let publication_highlight = data.site.siteMetadata.publication_highlight\n  let highlighted_author =\n    '<span class=\"author-highlighted\">' + publication_highlight + \"</span>\"\n  let authors = props.authors.replace(publication_highlight, highlighted_author)\n\n  const badges = props.badges.map((item, index) => (\n    <Badge \n      key={props.key + '_' + index}\n      link={item.link}>\n        {item.name}\n    </Badge>\n  ))\n\n  return (\n    <div className=\"publication-item\">\n      <p className=\"publication-title\">\n        { props.preprint === 1 ? <span className=\"publication-preprint\">[preprint] </span> : \"\" }{props.title}.\n        <span className=\"publication-journal-year\">\n          {\" \" + props.journal || \"\"} ({props.year || \"\"})\n        </span>\n      </p>\n      <p><span\n        className=\"publication-authors\"\n        dangerouslySetInnerHTML={{ __html: authors }}\n      ></span></p>\n      {badges}\n    </div>\n  )\n}\n\nexport default Publication\n","import React, { useState } from \"react\"\nimport Layout from \"../components/layout\"\nimport PublicationData from \"../../content/publications.yaml\"\nimport PatentData from \"../../content/patents.yaml\"\nimport Citations from \"../components/citations\"\nimport Publication from \"../components/publication\"\n\nconst Publications = () => {\n  const [selectedYear, setSelectedYear] = useState(\"All\")\n\n  const handleYearChange = event => {\n    setSelectedYear(event.target.value)\n  }\n\n  const filteredPublications = PublicationData.filter(item => {\n    return selectedYear === \"All\" ? true : item.Year.toString() === selectedYear;\n  });\n\n  const filteredPatents = PatentData.filter(item => {\n    return selectedYear === \"All\" ? true : item.Year.toString() === selectedYear;\n  });\n\n  const years = [\n    ...new Set([\n      ...PublicationData.map(item => item.Year),\n      ...PatentData.map(item => item.Year)\n    ])\n  ].sort((a, b) => b - a)\n\n  const publications = filteredPublications.map((item, index) => (\n    <Publication\n      key={index}\n      title={item.Title}\n      authors={item.Authors}\n      journal={item.Journal}\n      year={item.Year}\n      preprint={item.Preprint}\n      badges={item.URLs || []}\n    />\n  ))\n\n  const patents = filteredPatents.map((item, index) => (\n    <Publication\n      key={index}\n      title={item.Title}\n      authors={item.Inventors}\n      journal={\"Patent: \" + item.Identifier}\n      year={item.Year}\n      preprint={0}\n      badges={item.URLs || []}\n    />\n  ))\n\n  return (\n    <Layout\n      pageTitle=\"Publications and Patents\"\n      pageDescription=\"an overview of my scientific publications and patents\"\n      showTitle={true}\n    >\n      <Citations />\n      <div className=\"citations\">\n        * These authors contributed equally to this work\n      </div>\n      <div>\n        <label htmlFor=\"year-filter\">Filter by year: </label>\n        <select id=\"year-filter\" value={selectedYear} onChange={handleYearChange}>\n          <option value=\"All\">All</option>\n          {years.map(year => (\n            <option key={year} value={year}>\n              {year}\n            </option>\n          ))}\n        </select>\n      </div>\n      <div>\n        {patents}\n        {publications}\n      </div>\n    </Layout>\n  )\n}\n\nexport default Publications"],"names":["props","React","href","link","className","children","patentText","PatentData","length","publicationText","PublicationData","citationText","CitationData","publication_highlight","useStaticQuery","site","siteMetadata","highlighted_author","authors","replace","badges","map","item","index","Badge","key","name","preprint","title","journal","year","dangerouslySetInnerHTML","__html","Publications","selectedYear","setSelectedYear","useState","filteredPublications","filter","Year","toString","filteredPatents","years","_toConsumableArray","Set","concat","sort","a","b","publications","Publication","Title","Authors","Journal","Preprint","URLs","patents","Inventors","Identifier","Layout","pageTitle","pageDescription","showTitle","Citations","htmlFor","id","value","onChange","event","target"],"sourceRoot":""}